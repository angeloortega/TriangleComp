<Program>
<LetCommand>
<CompoundDeclarationSingleDeclaration>
<VarDeclaration>
<Identifier value="a"/>
<VarSingleDeclarationSingleDeclaration>
<SecExpression>
<CharacterExpression>
<CharacterLiteral value="'b'"/>
</CharacterExpression>
</SecExpression>
</VarSingleDeclarationSingleDeclaration>
</VarDeclaration>
</CompoundDeclarationSingleDeclaration>
<ChoooseCommand>
<SecExpression>
<AssignExpression>
<SimpleVname>
<Identifier value="a"/>
</SimpleVname>
</AssignExpression>
</SecExpression>
<Cases>
<SequentialCase>
<SequentialCase>
<SequentialCase>
<CaseWhen>
<CaseLiterals>
<SequentialCaseRange>
<SequentialCaseRange>
<SequentialCaseRange>
<SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'a'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'e'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'b'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'c'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'d'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</SequentialCaseRange>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="1"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
<CaseWhen>
<CaseLiterals>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'f'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="2"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
</SequentialCase>
<CaseWhen>
<CaseLiterals>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'g'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
</SequentialCase>
<CaseWhen>
<CaseLiterals>
<CaseRangeCase>
<CaseLiteralCHAR>
<CharacterLiteral value="'h'"/>
</CaseLiteralCHAR>
</CaseRangeCase>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="4"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
</SequentialCase>
<ElseCase>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="5"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</ElseCase>
</Cases>
</ChoooseCommand>
</LetCommand>
</Program>
