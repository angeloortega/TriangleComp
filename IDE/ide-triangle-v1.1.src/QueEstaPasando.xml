<Program>
<ChoooseCommand>
<SecExpression>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="1"/>
</IntegerExpression>
<Operator value="*"/>
<LParenExpression>
<SecExpression>
<BinaryExpression>
<IntegerExpression>
<IntegerLiteral value="2"/>
</IntegerExpression>
<Operator value="+"/>
<IntegerExpression>
<IntegerLiteral value="2"/>
</IntegerExpression>
</BinaryExpression>
</SecExpression>
</LParenExpression>
</BinaryExpression>
</SecExpression>
<Cases>
<SequentialCase>
<CaseWhen>
<CaseLiterals>
<SequentialCaseRange>
<SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralINT>
<IntegerLiteral value="1"/>
</CaseLiteralINT>
</CaseRangeCase>
<CaseRangeCase>
<CaseLiteralINT>
<IntegerLiteral value="2"/>
</CaseLiteralINT>
</CaseRangeCase>
</SequentialCaseRange>
<CaseRangeCase>
<CaseLiteralINT>
<IntegerLiteral value="3"/>
</CaseLiteralINT>
</CaseRangeCase>
</SequentialCaseRange>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="123"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
<CaseWhen>
<CaseLiterals>
<CaseRangeCase>
<CaseLiteralINT>
<IntegerLiteral value="4"/>
</CaseLiteralINT>
</CaseRangeCase>
</CaseLiterals>
<ChoooseCommand>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="3"/>
</IntegerExpression>
</SecExpression>
<Cases>
<CaseWhen>
<CaseLiterals>
<CaseRangeCase>
<CaseLiteralINT>
<IntegerLiteral value="1"/>
</CaseLiteralINT>
</CaseRangeCase>
</CaseLiterals>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="1"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</CaseWhen>
<ElseCase>
<CallCommand>
<CompoundIdentifier>
<Identifier value="putint"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<IntegerExpression>
<IntegerLiteral value="2"/>
</IntegerExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</ElseCase>
</Cases>
</ChoooseCommand>
</CaseWhen>
</SequentialCase>
<ElseCase>
<CallCommand>
<CompoundIdentifier>
<Identifier value="put"/>
</CompoundIdentifier>
<SingleActualParameterSequence>
<ConstActualParameter>
<SecExpression>
<CharacterExpression>
<CharacterLiteral value="'E'"/>
</CharacterExpression>
</SecExpression>
</ConstActualParameter>
</SingleActualParameterSequence>
</CallCommand>
</ElseCase>
</Cases>
</ChoooseCommand>
</Program>
